{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Icons.svelte","../../src/NavItem.svelte","../../src/Logo.svelte","../../src/highlight.js","../../src/helpers.js","../../src/Toolbar.svelte","../../src/Tool.svelte","../../src/Copy.svelte","../../src/SaveFile.svelte","../../src/SourceCode.svelte","../../src/Diagram.svelte","../../src/adiaworker.js","../../src/ADia.svelte","../../src/About.svelte","../../src/Quickstart.svelte","../../src/Kitchen.svelte","../../src/NotFound.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.5' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<svg aria-hidden=\"true\" style=\"position: absolute; width: 0; height: 0; overflow: hidden;\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<defs>\n\n<symbol id=\"icon-pacman\" viewBox=\"0 0 32 32\">\n<path d=\"M17.362 16.438l8.339 8.483c-2.125 1.908-4.925 3.079-8.006 3.079-6.627 0-12-5.373-12-12s5.373-12 12-12c3.38 0 6.428 1.402 8.609 3.65l-8.942 8.788zM18.174 7.958c-0.828 0-1.499 0.672-1.499 1.5 0 0.829 0.671 1.5 1.499 1.5 0.829 0 1.501-0.671 1.501-1.5 0-0.828-0.672-1.5-1.501-1.5z\"></path>\n</symbol>\n\n<symbol id=\"icon-numbers\" viewBox=\"0 0 32 32\">\n<path d=\"M12 26h20v4h-20zM12 14h20v4h-20zM12 2h20v4h-20zM6 0v8h-2v-6h-2v-2zM4 16.438v1.563h4v2h-6v-4.563l4-1.875v-1.563h-4v-2h6v4.563zM8 22v10h-6v-2h4v-2h-4v-2h4v-2h-4v-2z\"></path>\n</symbol>\n\n<symbol id=\"icon-reset\" viewBox=\"0 0 32 32\">\n<path d=\"M16 2c-4.418 0-8.418 1.791-11.313 4.687l-4.686-4.687v12h12l-4.485-4.485c2.172-2.172 5.172-3.515 8.485-3.515 6.627 0 12 5.373 12 12 0 3.584-1.572 6.801-4.063 9l2.646 3c3.322-2.932 5.417-7.221 5.417-12 0-8.837-7.163-16-16-16z\"></path>\n</symbol>\n\n<symbol id=\"icon-copy\" viewBox=\"0 0 32 32\">\n<path d=\"M20 8v-8h-14l-6 6v18h12v8h20v-24h-12zM6 2.828v3.172h-3.172l3.172-3.172zM2 22v-14h6v-6h10v6l-6 6v8h-10zM18 10.828v3.172h-3.172l3.172-3.172zM30 30h-16v-14h6v-6h10v20z\"></path>\n</symbol>\n\n<symbol id=\"icon-zoom-in\" viewBox=\"0 0 32 32\">\n<path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8zM14 6h-4v4h-4v4h4v4h4v-4h4v-4h-4z\"></path>\n</symbol>\n\n<symbol id=\"icon-zoom-out\" viewBox=\"0 0 32 32\">\n<path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8zM6 10h12v4h-12z\"></path>\n</symbol>\n\n<symbol id=\"icon-zoom-reset\" viewBox=\"0 0 32 32\">\n<path d=\"M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z\"></path>\n</symbol>\n\n<symbol id=\"icon-enlarge\" viewBox=\"0 0 32 32\">\n<path d=\"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"></path>\n<path d=\"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"></path>\n<path d=\"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"></path>\n<path d=\"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"></path>\n</symbol>\n\n<symbol id=\"icon-shrink\" viewBox=\"0 0 32 32\">\n<path d=\"M18 14h13l-5-5 6-6-3-3-6 6-5-5z\"></path>\n<path d=\"M18 18v13l5-5 6 6 3-3-6-6 5-5z\"></path>\n<path d=\"M14 18h-13l5 5-6 6 3 3 6-6 5 5z\"></path>\n<path d=\"M14 14v-13l-5 5-6-6-3 3 6 6-5 5z\"></path>\n</symbol>\n\n<symbol id=\"icon-open\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z\" />\n</symbol>\n  \n<symbol id=\"icon-save\" viewBox=\"0 0 22 22\">\n<path fill=\"currentColor\" d=\"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\" />\n</symbol>\n\n</defs>\n</svg>\n","<a \n  {id} \n  class:current={current == target}\n  {style} \n  href={!internal? target: undefined} \n  on:click={internal? click: undefined}\n  >\n  {#if icon}\n    <svg><use xlink:href={\"#icon-\" + icon}></use></svg>\n  {/if}\n  {#if title}\n    <span class:lpad={icon == null}>{title}</span>\n  {/if}\n</a>\n<script>\nimport { getContext } from 'svelte';\nexport let title = '';\nexport let target;\nexport let icon = null;\nexport let id = '';\nexport let style = '';\nexport let current;\nlet internal = false;\n\nconst { navigate } = getContext('nav');\n\nfunction click() {\n  navigate(target);\n}\n\nif (target !== undefined && target.startsWith('/')) {\n  internal = true;\n}\n\n</script>\n<style lang=\"sass\" type=\"text/sass\">\n\na\n  float: right\n  // Doozak\n  height: $navheight\n  line-height: $navheight \n  vertical-align: middle\n  overflow: hidden\n  &.current\n    color: $mangool\n  > *\n    float: left\n  svg\n    width: $navheight\n    margin-top: $navheight * .25\n    height: $navheight * .5\n  span\n    margin-right: $gutter\n    vertical-align: middle\n    line-height: $navheight \n\n.lpad\n  margin-left: $gutter\n\n</style> \n\n","<script>\nimport { getContext } from 'svelte';\n\nconst { navigate } = getContext('nav');\n\nexport let spin = true;\n\n</script>\n<button on:click={() => navigate('/')}>\n  <svg \n   class=\"{ spin? 'start': 'stop'}\"\n   >\n    <use xlink:href=\"#icon-pacman\"></use>\n  </svg>\n  <h4>ADia</h4>\n</button>\n<style lang=\"sass\" type=\"text/sass\" scoped>\n\nbutton\n  height: $navheight\n  line-height: $navheight \n  vertical-align: middle\n  overflow: hidden\n  > *\n    float: left\n    line-height: $navheight \n  svg\n    width: $navheight\n    margin-top: $navheight * .10\n    height: $navheight * .7\n    \n    /* Animation */\n    animation-name: go\n    animation-duration: 500ms\n    animation-fill-mode: forwards\n    animation-iteration-count: infinite\n    animation-direction: reverse\n    &.stop\n      animation-iteration-count: 1\n\n@keyframes go\n    to      { transform: rotate(0deg); }\n    from    { transform: rotate(360deg); }\n\n\n</style> \n","const patterns = [\n  {\n    name: 'newline',\n    pattern: /\\r?\\n/\n  },\n  {\n    name: 'comment',\n    pattern: /^ *#.*(?=$)/, \n  },\n  {\n    name: 'return',\n    pattern: /(?<==> *).+ *(?=$)/,\n  },\n  {\n    name: 'multilinepipe',\n    pattern: /(?<=:) ?\\|/,\n  },\n  {\n    name: 'text1',\n    pattern: /(?<=:) *.+(?==>)/,\n  },\n  {\n    name: 'text2',\n    pattern: /(?<=:) *.+(?=$)/,\n  },\n  {\n    name: 'diagram',\n    pattern: /diagram/\n  },\n  {\n    name: 'attr',\n    pattern: /version|author/,\n  },\n  {\n    name: 'sequence',\n    pattern: /sequence/,\n  },\n  {\n    name: 'moduleattrattr',\n    pattern: /(?<=\\.)title/,\n  },\n  {\n    name: 'moduleattrmodule',\n    pattern: /^\\w+(?=\\.)/,\n  },\n  {\n    name: 'notemodulefirst',\n    pattern: /(?<=@)\\w+/,\n  },\n  {\n    name: 'notemodulesecond',\n    pattern: /(?<=@.*~ *)\\w+/,\n  },\n  {\n    name: 'caller',\n    pattern: /(?<=^ *)\\w+ *(?=->)/,\n  },\n  {\n    name: 'callee',\n    pattern: /(?<=->) *\\w+ *(?=:|$)/,\n  },\n  {\n    name: 'keyword',\n    pattern: /(?<=^ *)(if|elif|else|for|while)(?=:|$)/,\n  },\n  {\n    name: 'keyop',\n    pattern: /->|=>|~|@|\\./,\n  },\n  {\n    name: 'op',\n    pattern: /[:!$%^&*)(+=_][}{;\"'?/\\\\<>,~-]/,\n  },\n  {\n    name: 'whitespace',\n    pattern: /\\s/\n  },\n  {\n    name: 'other',\n    pattern: /\\S+/\n  },\n];\n\nconst namedGroupPatterns = [];\nfor(let i = 0; i < patterns.length; i++){\n  let pattern = patterns[i];\n  namedGroupPatterns.push(`(?<${pattern.name}>${pattern.pattern.source})`);\n}\nconst wholePattern = new RegExp(namedGroupPatterns.join('|'), 'gmi');\n\n\nexport function tokenize(input, selectionStartChar, selectionEndChar) {\n  let lines = 0;\n  let matchText;\n  let tokenLen = 0;\n  const tokens = [];\n  \n  /* Finding selected lines here to improve the performance and avoid slip\n     the content by '\\n' and another loop over newline characters. */\n  let selectionStartLine = -1;\n  let selectionEndLine = -1;\n\n  for (const match of input.matchAll(wholePattern)) {\n    for (let name in match.groups) {\n      matchText = match.groups[name];\n      if (matchText == undefined) {\n        continue;\n      }\n      \n      tokenLen = matchText.length;\n      tokens.push({\n        name: name,\n        text: matchText,\n        row: lines,\n        index: match.index,\n        length: tokenLen\n      });\n      \n      if ((selectionStartChar >= match.index) && \n          (selectionStartChar - match.index <= tokenLen)) {\n        selectionStartLine = lines;\n      }\n\n      if ((selectionEndChar >= match.index) && \n          (selectionEndChar - match.index <= tokenLen)) {\n        selectionEndLine = lines;\n      }\n\n      if (name == 'newline') {\n        lines++;\n      }\n    }\n  }\n  \n  /* An extra whitespace will be appended to the end of the list to behave \n     like the textarea. */\n  const last = tokens[tokens.length - 1];\n  if (last && last.name == 'newline') {\n    const index = last.index + 1;\n    tokens.push({\n      name: 'whitespace',\n      text: ' ',\n      row: lines,\n      index: index,\n      length: 1\n    });\n    \n    if ((selectionStartChar >= index) && \n        (selectionStartChar - index <= 1)) {\n      selectionStartLine = lines;\n    }\n    if ((selectionEndChar >= index) && \n        (selectionEndChar - index <= 1)) {\n      selectionEndLine = lines;\n    }\n  }\n\n  /* Return the result */\n  lines++;\n  return {\n    tokens,\n    lines,\n    selectionStartLine,\n    selectionEndLine,\n  };\n}\n","export function leftPad(num, places, char) {\n  return String(num).padStart(places, char);\n}\n\nexport function pureFilename(string) {\n    return string.trim().toLowerCase().replace(/\\s/g, '-');\n}\n","<div class=\"toolbar\">\n  <slot></slot>\n</div>\n\n<style type=\"text/sass\">\n  .toolbar\n    background: $bg-dark\n    height: $toolheight\n</style>\n\n<script>\n\n</script>\n","<button \n  on:click\n  title={title}\n  style={far? 'float: right': ''}\n  class={enabled? 'enabled': ''}\n  >\n  <svg><use xlink:href={\"#icon-\" + icon}></use></svg>\n</button>\n<script>\nexport let title;\nexport let icon;\nexport let enabled = false;\nexport let far = false;\n</script>\n<style lang=\"sass\" type=\"text/sass\">\n\nbutton\n  float: left\n  width: $toolheight\n  height: $toolheight\n  line-height: $toolheight \n  vertical-align: middle\n  background: $bg-dark\n  &.enabled\n    svg\n      fill: $mangool\n\n  svg\n    width: $toolheight - $gutter\n    height: $toolheight - $gutter\n    margin-top: $gutter / 2\n\n</style> \n\n","<Tool \n icon=\"copy\" \n title=\"Copy to clipboard\"\n enabled={value == oldValue}\n on:click={copy}\n />\n\n<script>\n  import Tool from './Tool.svelte';\n  \n  export let value;\n  \n  let oldValue;\n\n  async function copy() {\n    await navigator.clipboard.writeText(value);\n    oldValue = value;\n  }\n</script>\n","<Tool \n icon=\"save\" \n title=\"Download\"\n on:click={downloadFile}\n />\n\n<script>\n  import Tool from './Tool.svelte';\n  import { pureFilename } from './helpers.js';\n\n  export let getFileInfo;\n  \n  function downloadFile() {\n    const [content, filename] = getFileInfo();\n    const url = URL.createObjectURL(new Blob([content]));\n    const link = document.createElement('a');\n    link.style = \"display: none\";\n    link.href = url;\n    link.setAttribute('download', pureFilename(filename));\n    document.body.appendChild(link);\n    link.click();\n    window.URL.revokeObjectURL(url);\n    link.remove();\n  }\n</script>\n","<span \n  class=\"monospace-massure\"\n  bind:this={meassure}\n  >X</span>\n<div id=\"sourceParent\">\n  <Toolbar>\n    <Tool \n     icon=\"numbers\" \n     title=\"{showLineNumbers? 'Hide': 'Show'} Line numbering\"\n     enabled={showLineNumbers}\n     on:click={() => showLineNumbers = !showLineNumbers}\n     />\n    {#if showResetButton}\n      <Tool \n       icon=\"reset\" \n       title=\"Reset\"\n       enabled={value == defaultValue}\n       on:click={() => value = defaultValue}\n       />\n    {/if}\n\n    <Tool \n      icon=\"open\" \n      title=\"Open file\"\n      on:click={() => fileInput.click()}\n      />\n    <SaveFile \n      getFileInfo={() => [value, suggestFilename()]}\n      />\n    <Copy value={value} />\n  </Toolbar>\n  <pre\n    class=\"highlight\"\n    style=\"padding-left: { leftPadding }px\"\n    bind:this={pre}\n  >\n  {#each codeInfo.tokens as token}\n    <span \n     class={token.name}\n    >{token.text}</span>\n  {/each}\n  </pre>\n  {#if showLineNumbers}\n    <div \n      class=\"numbers\" \n      style=\"width: { lnWidth }px\"\n      bind:this={num}\n    >\n      {#each [...Array(codeInfo.lines).keys()] as l}\n        <span\n          class={(l >= codeInfo.selectionStartLine) && (l <=\n          codeInfo.selectionEndLine)? 'selected': ''}\n        >{ leftPad(l + 1, lnDigits, ' ') }</span>\n      {/each}\n    </div>\n  {/if}\n  <textarea\n    spellcheck=\"false\"\n    wrap=\"off\"\n    style=\"padding-left: { leftPadding }px\"\n    bind:value={value}\n    bind:this={textarea}\n    on:scroll={updateScrollPosition}\n    on:keyup={updateSelection}\n    on:change={delayedUpdate}\n    ></textarea>\n\n  <input style=\"display: none\"\n    type=\"file\"\n    accept=\".txt, .adia\"\n    on:change={onFileSelected}\n    bind:this={fileInput} >\n</div>\n<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { tokenize } from './highlight.js'; \n  import { leftPad } from './helpers.js';\n  import Toolbar from './Toolbar.svelte';\n  import Tool from './Tool.svelte';\n  import Copy from './Copy.svelte';\n  import SaveFile from './SaveFile.svelte';\n  \n  /* Properties */\n  export let value = '';\n  export let defaultValue = '';\n  export let showLineNumbers = true;\n  export let showResetButton = false;\n  \n  /* Elements */\n  let meassure;\n  let pre;\n  let num;\n  let textarea;\n  let fileInput;\n\n  /* Line Numbering */\n  $: leftPadding = (showLineNumbers? lnWidth: 0) + 4;\n  let charWidth = 11;\n  \n  /* Selection */\n  let selectionStartChar = -1;\n  let selectionEndChar = -1;\n\n  $: codeInfo = tokenize(value, selectionStartChar, selectionEndChar);\n  $: lnDigits = codeInfo.lines.toString().length;\n  $: lnWidth = lnDigits * charWidth + 12;\n  \n  function updateSelection() {\n    const activeElement = document.activeElement;\n  \n    // make sure this is your textarea\n    if (activeElement === textarea) {\n      selectionStartChar = textarea.selectionStart;\n      selectionEndChar = textarea.selectionEnd;\n    }\n  }\n\n  function delayedUpdate() {\n    setTimeout(() => {\n      codeInfo = tokenize(textarea.value, selectionStartChar, selectionEndChar);\n    }, 100);\n  }\n\n  function updateScrollPosition() {\n    pre.scrollLeft = textarea.scrollLeft;\n    pre.scrollTop = textarea.scrollTop;\n    num.scrollTop = textarea.scrollTop;\n  }\n\n  onMount(function() {\n    charWidth = meassure.clientWidth;\n    document.addEventListener('selectionchange', updateSelection);\n  });\n\n  onDestroy(function() {\n    document.removeEventListener('selectionchange', updateSelection);\n  });\n\n  function onFileSelected (e) {\n    let fileContent = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsText(fileContent);\n    reader.onload = e => {\n      if (confirm('Are you sure to discard the current source code?')) {\n        value = e.target.result;\n      }\n    };\n  }\n  \n  function suggestFilename() {\n    let m = value.match(/diagram *: *(.+)(?=$)/mi);\n    let filename = 'untitled';\n    if (m) {\n      let name = m[1].trim();\n      if (name) {\n        filename = name;\n      }\n    }\n    \n    return filename + '_src.txt';\n  }\n</script>\n\n<style type=\"text/sass\">\n\n#sourceParent\n  width: 100%\n  height: 100%\n  background: $bg-dark\n\ntextarea\n  display: block\n  outline: 1px solid $bg-dark\n  background: transparent\n  cursor: text\n  color: transparent\n  caret-color: $fg\n  resize: none\n\ntextarea,\npre,\n.numbers\n  position: absolute\n  top: $toolheight\n  left: 0px\n  height: calc(100% - #{$toolheight})\n  overflow-x: auto\n  line-height: $lineheight\n\n\ntextarea,\npre\n  width: 100%\n  z-index: 8\n  border: none\n  font-size: $fontsize\n  vertical-align: baseline\n\npre\n  &::-webkit-scrollbar-track,\n  &::-webkit-scrollbar-thumb,\n  &::-webkit-scrollbar-corner\n    background: none \n \n.numbers\n  z-index: 10\n  font-size: $fontsize - 2\n  color: $mangool\n  scrollbar-width: none;  /* Firefox */\n  &::-webkit-scrollbar\n    display: none;\n  span\n    float: left \n    clear: both\n    width: 100%\n    text-align: right\n    padding-right: 4px\n    background: $bg-light\n    box-shadow: inset 0 0 2px black\n    vertical-align: baseline\n    &.selected\n      background: $jingool\n      \n.monospace-massure\n  position: absolute\n  top: -100px\n  left: -100px\n  line-height: $lineheight\n  font-size: $fontsize\n  font-family: monospace\n\n</style>\n","<Toolbar>\n  <SaveFile getFileInfo={() => [value, suggestFilename()]} />\n  <Copy value={value} />\n  <Tool \n   icon=\"zoom-in\" \n   title=\"Zoom In\"\n   enabled={maxFontSize <= fontSize}\n   on:click={() => fontSize < maxFontSize && fontSize++}\n   />\n  <Tool \n   icon=\"zoom-reset\" \n   title=\"Reset Zoom\"\n   enabled={defaultFontSize == fontSize}\n   on:click={() => fontSize = defaultFontSize}\n   />\n  <Tool \n   icon=\"zoom-out\" \n   title=\"Zoom Out\"\n   enabled={minFontSize >= fontSize}\n   on:click={() => fontSize > minFontSize && fontSize--}\n   />\n   <slot></slot>\n</Toolbar>\n<textarea \n  spellcheck=\"false\"\n  wrap=\"off\"\n  class=\"pad1\"\n  bind:this={textarea}\n  bind:value\n  style=\"font-size: {fontSize? fontSize + 'px': 'inherit'}\"\n  disabled></textarea>\n\n<style type=\"text/sass\">\n  \ntextarea\n  display: block\n  width: 100%\n  height: 100%\n  background: $bg-dark\n  border: none\n  outline: 1px solid $bg-dark\n  color: $fg\n  resize: none\n  height: calc(100% - #{$toolheight})\n\n</style>\n<script>\n  import { onMount } from 'svelte';\n  import Toolbar from './Toolbar.svelte';\n  import Copy from './Copy.svelte';\n  import Tool from './Tool.svelte';\n  import SaveFile from './SaveFile.svelte';\n  \n  /* Properties */\n  export let value;\n  \n  /* Private */\n  const maxFontSize = 30;\n  const minFontSize = 4;\n  let textarea;\n  let fontSize; \n  let defaultFontSize; \n  \n  onMount(function() {\n    defaultFontSize = fontSize = parseInt(\n      window.getComputedStyle(textarea).getPropertyValue('font-size')\n    );\n  });\n\n  function suggestFilename() {\n    let m = value.match(/diagram *: *(.+)(?=$)/mi);\n    let filename = 'untitled';\n    if (m) {\n      let name = m[1].trim();\n      if (name) {\n        filename = m[1];\n      }\n    }\n    \n    return filename + '_diagram.txt';\n  }\n \n</script>\n","export class ADiaWorker {\n  delay = 0; // ms\n  loadingProbeInterval = 300; // ms\n  input;\n  source;\n\n  /* Hooks */\n  onresult = null\n  onsuccess = null\n  onerror = null\n  onstatus = null\n  oninit = null\n\n  // inititializing, processing, idle\n  #_status = 'initializing';\n\n  /* Private Fields */\n  #_delayTimer;\n\n  constructor(key) {\n    this.key = key;\n    this.ensureADiaAPI();\n  }\n  \n  hook(name, data) {\n    let handler = this[name];\n    if (handler === undefined) {\n      throw `Invalid hook name: ${name}`;\n    }\n    if (handler == null) {\n      return;\n    }\n    \n    handler(this, data);\n  }\n\n  get status() {\n    return this.#_status;\n  }\n\n  set status(newValue) {\n    this.#_status = newValue;\n    this.hook('onstatus', newValue);\n  }\n\n  ensureADiaAPI() {\n    if (window.__adia__ === undefined) {\n      setTimeout(this.ensureADiaAPI.bind(this), this.loadingProbeInterval);\n      return;\n    }\n    \n    window.__adia__.registerCallback(this.key, this.onResult.bind(this));\n    window.__adia__.send(this.key, '?version');\n  }\n  \n  cleanup() {\n    window.__adia__.unregisterCallback(this.key);\n  }\n\n  send() {\n    if (this.input === undefined) {\n      return;\n    }\n    let newSource = this.input();\n    if (this.source == newSource) {\n      /* Do Nothing */\n      return;\n    }\n    \n    this.status = 'processing';\n    this.source = newSource;\n    window.__adia__.send(this.key, this.source);\n  }\n\n  go() {\n    if (this.status != 'idle') {\n      return;\n    }\n\n    if (this.delay > 0) {\n      clearTimeout(this.#_delayTimer);\n      this.#_delayTimer = setTimeout(this.send.bind(this), this.delay);\n    }\n    else {\n      this.send();\n    }\n  }\n  \n  onResult(result) {\n    if (result.type ==  'version') {\n      this.__version__ = result.answer;\n      this.hook('oninit');\n    }\n    else {\n      this.hook('onresult', result);\n      if (result.error) {\n        this.hook('onerror', result.error);\n      }\n      else {\n        this.hook('onsuccess', result.answer);\n      }\n    }\n    this.status = 'idle';\n    this.go();\n  }\n}\n\n//window.aDia = new ADia();\n","<svelte:window bind:innerWidth />\n<div class=\"main\" class:fullscreen >\n  <div\n    bind:this={left}\n    bind:clientWidth={leftWidth}\n    style=\"--left-size: {sourceAreaWidth}%\"\n    class=\"left\">\n    <SourceCode \n      bind:this={sourceArea} \n      bind:value={source} \n      defaultValue={defaultSource}\n      showResetButton={showResetButton}\n    />\n  </div>\n  \n  <div\n    class=\"separator\"\n    on:mousedown={resizeStart}\n    on:mouseup={resizeStop}\n  />\n  \n  <div\n    bind:this={right}\n    style=\"--right-size: {diagramAreaWidth}%\"\n    class=\"right\"\n  >\n  <Diagram value={diagram}>\n    <Tool \n     far=\"false\"\n     icon={fullscreen? 'shrink': 'enlarge'}\n     title=\"{fullscreen? 'Exit ': ''}Fullscreen Mode\"\n     on:click={() => fullscreen = !fullscreen}\n     />\n  </Diagram>\n  </div>\n</div>\n\n<style type=\"text/sass\" scoped>\n\n.main\n  display: inline-flex\n  height: calc(100% - #{$gutter})\n  width: 100%\n\n.separator\n  cursor: col-resize\n  height: 100%\n  width: $gutter\n  z-index: 1\n\n.left\n  width: var(--left-size)\n  min-width: 100px\n  height: 100%\n\n.right\n  width: var(--right-size)\n  min-width: 100px\n  height: 100%\n  background-color: $bg-light\n  overflow-y: auto\n  overflow-x: hidden\n\n.fullscreen\n  position: fixed\n  top: 0px\n  left: 0px\n  right: 0px\n  height: 100%\n  bottom: 0px\n  z-index: 50\n  background-color: $bg-light\n</style>\n\n<script>\n  import SourceCode from './SourceCode.svelte';\n  import Diagram from './Diagram.svelte';\n  import { onMount, onDestroy } from 'svelte';\n  import { ADiaWorker } from './adiaworker.js';\n  import Tool from './Tool.svelte';\n\n  /* Properties */\n  export let key = 'adia-main';\n  export let busy = true;\n  export let loading = true;\n  export let persistent = true;\n  export let showResetButton = false;\n  export let fullscreen = false;\n  \n  export let sourceAreaWidth = localGet('sourceAreaWidth') ? \n    localGet('sourceAreaWidth') : 30;\n\n  $: diagramAreaWidth = 100 - sourceAreaWidth; \n\n  /* Elements */\n  let sourceArea;\n  let left;\n  let right;\n  \n  /* Private variables */\n  let lastSeparatorLocation;\n  let innerWidth;\n  let leftWidth;\n\n  /* ADia Worker */\n  let diagram = '';\n  let source;\n  export let defaultSource = `# Live Demo\n\ndiagram: Foo\nauthor: Alice\nversion: 0.1\n\n# First section\nsequence: Hello\nfoo.title: Foo\n\n@foo: Say Hello\nfoo -> bar: helloworld => Hi\n  @foo ~ baz: |\n    lorem ipsum\n  for: each item\n    bar -> baz: Hello()\n\n# Second section\nsequence: Bye\n\nfoo -> bar: Bye() => See U there\n  if: baz is there\n    bar -> baz: Bye()`;\n\n  function localStore(name, value) {\n    if (persistent) {\n      localStorage.setItem(`${key}-${name}`, value);\n    }\n  }\n\n  function localGet(name) {\n    if (persistent) {\n      return localStorage.getItem(`${key}-${name}`);\n    }\n    return null;\n  }\n\n  function resizeStart(e) {\n    lastSeparatorLocation = {\n      e,\n      leftWidth: left.offsetWidth,\n      rightWidth: right.offsetWidth,\n    };\n    window.addEventListener('mousemove', resize);\n  }\n  \n  function resize (e) {\n    if (e.clientX !== lastSeparatorLocation.e.clientX) {\n      let delta = e.clientX - lastSeparatorLocation.e.clientX;\n      delta = Math.min(Math.max(delta, -lastSeparatorLocation.leftWidth),\n        lastSeparatorLocation.rightWidth);\n      left.style.width = lastSeparatorLocation.leftWidth + delta + 'px';\n      right.style.width = lastSeparatorLocation.rightWidth - delta + 'px';\n    }\n  }\n\n  function resizeStop () {\n    localStore('sourceAreaWidth', \n      Math.round(leftWidth / (innerWidth - 14) * 100));\n    window.removeEventListener('mousemove', resize);\n  }\n\n  $: if (source != undefined) {\n    aDia.go();\n  }\n  \n  /* ADia configuration */\n  const aDia = new ADiaWorker(key);\n  aDia.delay = 300;\n  aDia.oninit = () => {\n    loading = false;\n  };\n  aDia.onstatus = (aDia, state) => {\n    busy = state != 'idle';\n  };\n  aDia.input = () => {\n    localStore('editorText', source);\n    return source;\n  };\n  aDia.onresult = () => diagram = '',\n  aDia.onerror = (aDia, err) => diagram = err;\n  aDia.onsuccess = (aDia, dia) => diagram = dia;\n\n  onMount(async function() {\n    let localText = localGet('editorText');\n    if (localText != null && localText.trim().length > 0) {\n      source = localText;\n    }\n    else {\n      source = defaultSource;\n    }\n  });\n\n  onDestroy(async function() {\n    aDia.cleanup();\n  });\n</script>\n\n","<div class=\"sm0 md0 lg1 xg1\"></div>\n<div id=\"about\" class=\"sm10 md10 lg8 xg8\">\n   <h2 class=\"all10\">\n    About\n    <hr />\n  </h2>\n  <p class=\"all10\">\n  ADia live demo page <i>version: appVersion</i> using javascript and \n    <a href=\"https://brython.info\">Brython</a>.\n  </p>\n  <p class=\"all10\">\n    <a href=\"https://github.com/pylover/adia\">ADia</a> \n    <i>version: { adiaVer }<i>\n  </p>\n  <h2 class=\"all10\">\n    Source Codes\n    <hr />\n  </h2>\n  <div class=\"all10\">\n    <ul>\n      {#each repos as repo}\n        <li>\n          <a href=\"{repo}\">{repo}</a>\n        </li>\n      {/each}\n    </ul>\n  </div>\n  <h2 class=\"all10\">\n    Documentation\n    <hr />\n  </h2>\n  <ul class=\"all10\">\n    {#each docs as v, i}\n      <li>\n        <a href=\"basePath/docs/{i == 0? 'latest': v}/html/\">\n          v{v}\n          {#if i == 0}\n            <i> (latest) </i>\n          {/if}\n        </a>\n      </li>\n    {/each}\n  </ul>\n  <div class=\"all10\" style=\"display: {oldDocs.length? 'block': 'none'}\">\n    <button on:click={() => {\n      docs = docs.concat(oldDocs); \n      oldDocs = [];\n    }}>show older</button>\n  </div>\n  <h2 class=\"all10\">\n    Javascript releases\n    <hr />\n  </h2>\n  <ul class=\"all10\">\n  {#each jsDists as v, i}\n    <li>\n      <a href=\"basePath/jsdist/adia-{v}.tar.gz\">\n        adia-{v}.tar.gz\n        {#if i == 0}\n          <i> (latest) </i>\n        {/if}\n      </a>\n    </li>\n  {/each}\n  </ul>\n  <div class=\"all10\" style=\"display: {oldJsDists.length? 'block': 'none'}\">\n    <button on:click={() => {\n      jsDists = jsDists.concat(oldJsDists);\n      oldJsDists = [];\n    }}>show older</button>\n  </div>\n\n  <!--\n  {#if loadingError}\n    <div>\n      <i>{ loadingError }</i>\n    </div>\n  {/if}\n  -->\n</div>\n<div class=\"sm0 md0 lg1 xg1\"></div>\n\n<style type=\"text/sass\" scoped>\n  @import 'styles/grid'\n\n</style>\n<script>\nimport { onMount, onDestroy } from 'svelte';\nimport { ADiaWorker } from './adiaworker.js';\n\nconst repos = [\n  'https://github.com/pylover/adia',\n  'https://github.com/pylover/adia-live',\n];\n\n/* Properties */\nexport let busy = true;\nexport let loading = true;\n\nlet loadingError;\nlet jsDists = [];\nlet oldJsDists = [];\nlet docs = [];\nlet oldDocs = [];\nlet adiaVer = 'loading...';\n\nonMount(async () => {\n  try {\n    let [js, doc] = await Promise.all([\n      fetch('basePath/jsdist/index.json?count=17').then(resp => resp.json()),\n      fetch('basePath/docs/index.json?count=9').then(resp => resp.json()),\n    ]);\n    jsDists = js.slice(0, 8);\n    oldJsDists = js.slice(8);\n\n    docs = doc.slice(0, 8);\n    oldDocs = doc.slice(8);\n  }\n  catch (err) {\n    loadingError = `Index loading error: ${err}`;\n  }\n  finally {\n    loading = false;\n  }\n});\n\n/* ADia configuration */\nconst aDia = new ADiaWorker('about-page');\naDia.oninit = (adia) => {\n  adiaVer = adia.__version__;\n  busy = false;\n};\n\nonDestroy(async function() {\n  aDia.cleanup();\n});\n</script>\n","<div class=\"sm0 md0 lg1 xg1\"></div>\n<div id=\"quickstart\" class=\"sm10 md10 lg8 xg8\">\n  {#each sections as section}\n    <h2 class=\"all10\">\n      {section.title}\n      <hr />\n    </h2>\n    <div class=\"adia all10\">\n      <ADia \n         key={section.title}\n         persistent={false} \n         sourceAreaWidth=\"33\" \n         defaultSource={section.source}\n         bind:loading\n         bind:busy\n         showResetButton={true}\n         />\n    </div>\n  {/each}\n  <h2 class=\"all10\">\n    Future reading\n    <hr />\n  </h2>\n  <p class=\"all10\">\n    <a href=\"basePath/docs/latest/html/\">\n      Documentation\n    </a>\n  </p>\n</div>\n<div class=\"sm0 md0 lg1 xg1\"></div>\n\n<style type=\"text/sass\" scoped>\n  @import 'styles/grid'\n  \n  .adia\n    height: 400px\n\n</style>\n<script>\nimport ADia from './ADia.svelte';\n\n/* Properties */\nexport let busy = true;\nexport let loading = true;\n\nconst sections = [\n  {\n    title: 'Call Subject and Return Value',\n    source: `diagram:\nsequence:\n\nfoo -> bar: baz() => qux\nfoo -> foo: quux() => thud\n`\n  },\n  {\n    title: 'Call Stack',\n    source: `diagram:\nsequence:\n\nfoo -> bar\n  bar -> baz\n  bar -> bar\n`\n  },\n  {\n    title: 'Condition',\n    source: `diagram:\nsequence:\n\nif: a > 0\n  foo -> bar\nelif: a < 0\n  foo -> baz\nelse:\n  foo -> qux\n`\n  },\n  {\n    title: 'For Loop',\n    source: `diagram:\nsequence:\n\nfor: every item\n  foo -> bar\n`\n  },\n  {\n    title: 'While Loop',\n    source: `diagram: \nsequence:\n\nwhile: true\n  foo -> bar\n`\n  },\n  {\n    title: 'Note',\n    source: `diagram: \nsequence:\n\n@foo: Lorem Ipsum\n@foo ~ bar: Lorem Ipsum\nfoo -> bar\n  bar -> baz \n    @baz: Lorem Ipsum\n  @bar: Lorem Ipsum\n`\n  },\n  {\n    title: 'Comments',\n    source: `diagram: \n\n# This is a commented line\n`\n  },\n  {\n    title: 'Metadata',\n    source: `diagram: \n\nversion: 1.2.3a4\nauthor: Alice\n`\n  },\n  {\n    title: 'Module\\'s Title',\n    source: `diagram: \nsequence:\n\nfoo.title: Foo Client\nbar.title: Bar API\n\nfoo -> bar\n`\n  }\n];\n</script>\n","<div class=\"sm0 md0 lg1 xg1\"></div>\n<div id=\"quickstart\" class=\"sm10 md10 lg8 xg8\">\n  <h1>Header 1</h1>\n  <h2>Header 2</h2>\n  <h3>Header 3</h3>\n  <h4>Header 4</h4>\n  <h5>Header 5</h5>\n  <h6>Header 6</h6>\n</div>\n<div class=\"sm0 md0 lg1 xg1\"></div>\n\n<style type=\"text/sass\" scoped>\n  @import 'styles/grid'\n  \n</style>\n<script>\nimport { onMount } from 'svelte';\n\n/* Properties */\nexport let busy = true;\nexport let loading = true;\n\nonMount(function() {\n  loading = false;\n  busy = false;\n});\n</script>\n","<h3>\n  Not Found !\n</h3>\n","<svelte:window on:popstate={e => softNavigate(e.state.target)} />\n<Icons />\n\n<!-- Initialization Overlay -->\n{#if loading}\n  <div class=\"loading all10\">\n    <p>Loading, please wait ... </p>\n  </div>\n{/if}\n\n<!-- Navbar -->\n<nav>\n  <Logo bind:spin />\n  <NavItem bind:current title=\"About\"     target=\"/about\" />\n  <NavItem bind:current title=\"Quickstart\"  target=\"/quickstart\" />\n  <NavItem bind:current title=\"Live Demo\" target=\"/\" />\n</nav>\n  \n<div class=\"content\">\n  <!-- Content -->\n  <svelte:component  \n  this={route.component}\n  bind:busy\n  bind:loading\n  />\n</div>\n\n<script>\nimport { setContext } from 'svelte';\nimport Icons from './Icons.svelte';\nimport NavItem from './NavItem.svelte';\nimport Logo from './Logo.svelte';\nimport ADia from './ADia.svelte';\nimport About from './About.svelte';\nimport Quickstart from './Quickstart.svelte';\nimport Kitchen from './Kitchen.svelte';\nimport NotFound from './NotFound.svelte';\n\nconst routes = {\n  '/':           {title: 'Live Demo',  component: ADia       },\n  '/about':      {title: 'About',      component: About      },\n  '/quickstart': {title: 'Quickstart', component: Quickstart },\n  '/kitchen':    {title: 'Kitchen',    component: Kitchen    },\n};\n\nconst notFound = {\n  title: 'Not Found',\n  component: NotFound,\n};\n\nlet busy = true;\nlet loading = true;\nlet route;\nlet current;\nexport let title;\n\n$: spin = busy;\n\n/* Navigation */\nfunction softNavigate(target) {\n  current = target;\n  route = routes[target];\n\n  /* 404 */\n  if (route == undefined) {\n    route = notFound;\n  }\n\n  /* Set the page title */\n  document.title = `${title} -> ${route.title}`;\n  return false;\n}\n\n\nfunction navigate(target) {\n  softNavigate(target);\n  window.history.pushState({\n    target\n  }, \n    route.title, \n    `${window.location.origin}basePath${target}`\n  );\n}\nsetContext('nav', {navigate});\n\n/* Match current route */\ncurrent = window.location.pathname.replace(new RegExp('^basePath'), '');\nnavigate(current);\n\n</script>\n\n<style lang=\"sass\" type=\"text/sass\" global>\nbody\n  height: 100%\n  color: $fg\n  font-family: monospace\n  background-color: $bg-light\n\n.content\n  width: 100%\n  height: calc(100% - #{$navheight})\n  overflow-y: auto\n\nnav\n  background-color: $bg-dark\n  width: 100%\n  display: block\n  height: $navheight\n  border-style: inset\n  border-bottom: 1px solid $bg-light\n  padding-right: $gutter\n\n.loading\n  position: absolute\n  top: $navheight\n  left: 0px\n  width: 100%\n  height: calc(100% - #{$navheight + $gutter})\n  z-index: 80\n  background: #000000\n  text-align: center\n  padding-top: $navheight * 3\n  font-size: 2em\n\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n    title: \"ADia!\",\n\t}\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","xlink_attr","setAttributeNS","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","crossorigin","current_component","is_crossorigin","window","parent","error","toggle_class","toggle","classList","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","getContext","context","get","bubble","callbacks","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","globalThis","global","bind","index","props","bound","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","title","icon","id","current","internal","navigate","startsWith","spin","patterns","pattern","namedGroupPatterns","source","wholePattern","RegExp","join","tokenize","selectionStartChar","selectionEndChar","matchText","lines","tokenLen","tokens","selectionStartLine","selectionEndLine","match","matchAll","groups","row","last","leftPad","num","places","char","String","padStart","enabled","far","oldValue","navigator","clipboard","writeText","getFileInfo","content","filename","url","URL","createObjectURL","Blob","link","href","trim","toLowerCase","replace","body","click","revokeObjectURL","remove","meassure","pre","textarea","fileInput","defaultValue","showLineNumbers","showResetButton","charWidth","updateSelection","activeElement","selectionStart","selectionEnd","suggestFilename","clientWidth","codeInfo","lnDigits","toString","lnWidth","leftPadding","setTimeout","scrollLeft","scrollTop","e","fileContent","files","reader","FileReader","readAsText","onload","confirm","result","maxFontSize","minFontSize","fontSize","defaultFontSize","parseInt","getComputedStyle","getPropertyValue","ADiaWorker","delay","loadingProbeInterval","onresult","onsuccess","onerror","onstatus","oninit","_status","_delayTimer","constructor","ensureADiaAPI","hook","status","newValue","__adia__","registerCallback","onResult","send","cleanup","unregisterCallback","newSource","go","clearTimeout","__version__","answer","position","iframe","tabIndex","unsubscribe","contentWindow","sourceArea","left","right","lastSeparatorLocation","innerWidth","leftWidth","busy","loading","persistent","fullscreen","sourceAreaWidth","localGet","diagram","defaultSource","localStore","localStorage","setItem","getItem","resize","clientX","delta","min","rightWidth","width","aDia","state","err","dia","localText","diagramAreaWidth","offsetWidth","round","jsDists","oldJsDists","docs","oldDocs","adiaVer","js","doc","all","fetch","resp","json","adia","concat","sections","routes","ADia","About","Quickstart","Kitchen","notFound","NotFound","route","softNavigate","history","pushState","location","origin","set","pathname"],"mappings":"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"}